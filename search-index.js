var searchIndex = {};
searchIndex["actix_web"] = {"doc":"Web framework for Actix","items":[[3,"Method","actix_web","The Request Method (VERB)",null,null],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"Cookie","","Representation of an HTTP cookie.",null,null],[3,"CookieBuilder","","Structure that follows the builder pattern for building `Cookie` structs.",null,null],[4,"CookieParseError","","Enum corresponding to a parsing error.",null,null],[13,"MissingPair","","The cookie did not contain a name/value pair.",0,null],[13,"EmptyName","","The cookie's name was empty.",0,null],[13,"Utf8Error","","Decoding the cookie's name or value resulted in invalid UTF-8.",0,null],[3,"HttpRange","","HTTP Range header representation.",null,null],[12,"start","","",1,null],[12,"length","","",1,null],[4,"HttpRangeParseError","","Range parsing error",null,null],[13,"InvalidRange","","Returned if range is invalid.",2,null],[13,"NoOverlap","","Returned if first-byte-pos of all of the byte-range-spec values is greater than the content size. See https://github.com/golang/go/commit/aa9b3d7",2,null],[3,"Application","","Application",null,null],[3,"ApplicationBuilder","","Application builder",null,null],[3,"HttpRequest","","An HTTP Request",null,null],[3,"UrlEncoded","","Future that resolves to a parsed urlencoded values.",null,null],[3,"HttpResponse","","An HTTP Response",null,null],[12,"version","","",3,null],[12,"headers","","",3,null],[12,"status","","",3,null],[3,"HttpResponseBuilder","","An HTTP response builder",null,null],[3,"Payload","","Stream of byte chunks",null,null],[3,"RouteFactory","","This is used for routes registration within `Resource`",null,null],[3,"Reply","","Represents response process.",null,null],[3,"Resource","","Http resource",null,null],[3,"Params","","Route match information",null,null],[3,"Logger","","`Middleware` for logging request and response info to the terminal.",null,null],[3,"HttpServer","","An HTTP Server",null,null],[3,"HttpContext","","Actor execution context",null,null],[3,"StaticFiles","","Static files handling",null,null],[4,"ParseError","","A set of errors that can occur during parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",4,null],[13,"Uri","","An invalid `Uri`, such as `exam ple.domain`.",4,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",4,null],[13,"Header","","An invalid `Header`.",4,null],[13,"TooLarge","","A message head is too large to be reasonable.",4,null],[13,"Incomplete","","A message reached EOF, but is not complete.",4,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",4,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",4,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",4,null],[13,"Utf8","","Parsing a field as string failed",4,null],[4,"Body","","Represents various types of http message body.",null,null],[13,"Empty","","Empty response. `Content-Length` header is set to `0`",5,null],[13,"Binary","","Specific response body. `Content-Length` header is set to length of bytes.",5,null],[13,"Length","","Streaming response body with specified length.",5,null],[13,"Streaming","","Unspecified streaming response. Developer is responsible for setting right `Content-Length` or `Transfer-Encoding` headers.",5,null],[13,"Upgrade","","Upgrade connection.",5,null],[4,"PayloadError","","A set of error that can occur during payload parsing.",null,null],[13,"Incomplete","","A payload reached EOF, but is not complete.",6,null],[13,"ParseError","","Parse error",6,null],[11,"default","","Create default `ApplicationBuilder` with no state",7,{"inputs":[{"name":"t"}],"output":{"name":"applicationbuilder"}}],[11,"builder","","Create application builder with specific state. State is shared with all routes within same application and could be accessed with `HttpContext::state()` method.",7,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"applicationbuilder"}}],[11,"resource","","Configure resource for specific path.",8,{"inputs":[{"name":"self"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"default_resource","","Default resource is used if no matches route could be found.",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"handler","","This method register handler for specified path prefix. Any path that starts with this prefix matches handler.",8,{"inputs":[{"name":"self"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"route_handler","","Add path handler",8,{"inputs":[{"name":"self"},{"name":"p"},{"name":"h"}],"output":{"name":"self"}}],[11,"middleware","","Construct application",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"finish","","Construct application",8,{"inputs":[{"name":"self"}],"output":{"name":"application"}}],[11,"from","","",7,{"inputs":[{"name":"applicationbuilder"}],"output":{"name":"application"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stop","","Stop actor execution",9,{"inputs":[{"name":"self"}],"output":null}],[11,"terminate","","Terminate actor execution",9,{"inputs":[{"name":"self"}],"output":null}],[11,"state","","Actor execution state",9,{"inputs":[{"name":"self"}],"output":{"name":"actorstate"}}],[11,"spawn","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"spawnhandle"}}],[11,"wait","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"cancel_future","","",9,{"inputs":[{"name":"self"},{"name":"spawnhandle"}],"output":{"name":"bool"}}],[11,"new","","",9,{"inputs":[{"name":"rc"}],"output":{"name":"httpcontext"}}],[11,"state","","Shared application state",9,null],[11,"start","","Start response processing",9,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"write","","Write payload",9,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"write_eof","","Indicate end of streamimng payload",9,{"inputs":[{"name":"self"}],"output":null}],[11,"pack","","",9,{"inputs":[{"name":"m"},{"name":"option"}],"output":{"name":"envelope"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",4,{"inputs":[{"name":"ioerror"}],"output":{"name":"parseerror"}}],[11,"from","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"parseerror"}}],[11,"from","","",4,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"parseerror"}}],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"parseerror"}}],[11,"from","","",3,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"httperror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"multiparterror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"httprangeparseerror"}],"output":{"name":"self"}}],[11,"new","","Construct a new Request.",10,{"inputs":[{"name":"method"},{"name":"uri"},{"name":"version"},{"name":"headermap"}],"output":{"name":"self"}}],[11,"extensions","","Protocol extensions.",10,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"uri","","Read the Request Uri.",10,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"method","","Read the Request method.",10,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"version","","Read the Request Version.",10,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"headers","","Read the Request Headers.",10,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"path","","The target path of this Request.",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"query","","Return a new iterator that yields pairs of `Cow<str>` for query parameters",10,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"query_string","","The query string in the URL.",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cookies","","Return request cookies.",10,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"cookie","","Return request cookie.",10,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"load_cookies","","Load cookies",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"match_info","","Get a reference to the Params object. Params is a container for url parameters. Route supports glob patterns: * for a single wildcard segment and :param for matching storing that segment of the request url in the Params object.",10,{"inputs":[{"name":"self"}],"output":{"name":"params"}}],[11,"set_match_info","","Set request Params.",10,{"inputs":[{"name":"self"},{"name":"params"}],"output":null}],[11,"keep_alive","","Checks if a connection should be kept alive.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"chunked","","Check if request has chunked transfer encoding",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"range","","Parses Range HTTP header string as per RFC 2616. `size` is full size of response (file).",10,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"multipart","","Return stream to process BODY as multipart.",10,{"inputs":[{"name":"self"},{"name":"payload"}],"output":{"name":"result"}}],[11,"urlencoded","","Parse `application/x-www-form-urlencoded` encoded body. Return `UrlEncoded` future. It resolves to a `HashMap<String, String>` which contains decoded parameters.",10,{"inputs":[{"name":"self"},{"name":"payload"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"has_body","","Does this body have payload.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","",3,{"inputs":[{"name":"statuscode"}],"output":{"name":"httpresponsebuilder"}}],[11,"new","","Constructs a response",3,{"inputs":[{"name":"statuscode"},{"name":"body"}],"output":{"name":"httpresponse"}}],[11,"from_error","","Constructs a response from error",3,{"inputs":[{"name":"statuscode"},{"name":"e"}],"output":{"name":"httpresponse"}}],[11,"error","","The `error` which is responsible for this response",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"version","","Get the HTTP version of this response.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"headers","","Get the headers from the response.",3,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Get a mutable reference to the headers.",3,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"status","","Get the status from the server.",3,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"status_mut","","Set the `StatusCode` for this response.",3,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"reason","","Get custom reason for the response.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_reason","","Set the custom reason for the response.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"set_connection_type","","Set connection type",3,{"inputs":[{"name":"self"},{"name":"connectiontype"}],"output":{"name":"self"}}],[11,"upgrade","","Connection upgrade status",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"keep_alive","","Keep-alive status for this connection",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"chunked","","is chunked encoding enabled",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_chunked_encoding","","Enables automatic chunked transfer encoding",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"body","","Get body os this response",3,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"set_body","","Set a body",3,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"replace_body","","Set a body and return previous body value",3,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"body"}}],[11,"from","","",3,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"version","","Get the HTTP version of this response.",12,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"self"}}],[11,"status","","Set the `StatusCode` for this response.",12,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"self"}}],[11,"header","","Set a header.",12,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"reason","","Set the custom reason for the response.",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"connection_type","","Set connection type",12,{"inputs":[{"name":"self"},{"name":"connectiontype"}],"output":{"name":"self"}}],[11,"upgrade","","Set connection type to Upgrade",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"force_close","","Force close connection, even if it is marked as keep-alive",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable_chunked","","Enables automatic chunked transfer encoding",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"content_type","","Set response content type",12,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"cookie","","Set a cookie",12,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"del_cookie","","Remote cookie, cookie has to be cookie from `HttpRequest::cookies()` method.",12,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"body","","Set a body",12,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"result"}}],[11,"new","","Create `Logger` middlewares with the specified `format`. If a `None` is passed in, uses the default format:",13,{"inputs":[{"name":"option"}],"output":{"name":"logger"}}],[11,"start","","",13,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"result"}}],[11,"finish","","",13,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",6,{"inputs":[{"name":"ioerror"}],"output":{"name":"payloaderror"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"paused","","Indicates paused state of the payload. If payload data is not consumed it get paused. Max size of not consumed data is 64k",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"eof","","Indicates EOF of payload",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","Length of the data in this payload",14,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Is payload empty",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"readany","","Get first available chunk of data. Returns Some(PayloadItem) as chunk, `None` indicates eof.",14,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"readexactly","","Get exactly number of bytes Returns Some(PayloadItem) as chunk, `None` indicates eof.",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"readline","","Read until `\\n` Returns Some(PayloadItem) as line, `None` indicates eof.",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"readuntil","","Read until match line Returns Some(PayloadItem) as line, `None` indicates eof.",14,null],[11,"unread_data","","Put unused data back to payload",14,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":null}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"set_name","","Set resource name",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"handler","","Register handler for specified method.",15,{"inputs":[{"name":"self"},{"name":"method"},{"name":"f"}],"output":null}],[11,"async","","Register async handler for specified method.",15,{"inputs":[{"name":"self"},{"name":"method"},{"name":"f"}],"output":null}],[11,"route_handler","","Register handler for specified method.",15,{"inputs":[{"name":"self"},{"name":"method"},{"name":"h"}],"output":null}],[11,"default_handler","","Default handler is used if no matched route found. By default `HTTPMethodNotAllowed` is used.",15,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"get","","Handler for `GET` method.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"post","","Handler for `POST` method.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"put","","Handler for `PUR` method.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"delete","","Handler for `METHOD` method.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"handle","","",15,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"async","","Create async response",16,{"inputs":[{"name":"a"}],"output":{"name":"routeresult"}}],[11,"reply","","Send response",16,{"inputs":[{"name":"r"}],"output":{"name":"routeresult"}}],[11,"into","","",16,{"inputs":[{"name":"self"},{"name":"httpcontext"}],"output":{"name":"task"}}],[11,"from","","",16,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_empty","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Get matched parameter by name",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"handle","","",18,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"new","","Create new `StaticFiles` instance",19,{"inputs":[{"name":"d"},{"name":"bool"}],"output":{"name":"staticfiles"}}],[11,"set_prefix","","",19,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"handle","","",19,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"new","","Create new http server with vec of http handlers",20,{"inputs":[{"name":"u"}],"output":{"name":"self"}}],[11,"serve_incoming","","Start listening for incomming connections from stream.",20,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"serve","","Start listening for incomming connections.",20,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"handle","","",20,{"inputs":[{"name":"self"},{"name":"iostream"},{"name":"context"}],"output":{"name":"response"}}],[0,"ws","","`WebSocket` support for Actix",null,null],[3,"WsStream","actix_web::ws","Maps `Payload` stream into stream of `ws::Message` items",null,null],[3,"WsWriter","","`WebSocket` writer",null,null],[4,"Message","","`WebSocket` Message",null,null],[13,"Text","","",21,null],[13,"Binary","","",21,null],[13,"Ping","","",21,null],[13,"Pong","","",21,null],[13,"Close","","",21,null],[13,"Closed","","",21,null],[13,"Error","","",21,null],[5,"handshake","","Prepare `WebSocket` handshake response.",null,{"inputs":[{"name":"httprequest"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",22,{"inputs":[{"name":"payload"}],"output":{"name":"wsstream"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"text","","Send text frame",23,{"inputs":[{"name":"httpcontext"},{"name":"str"}],"output":null}],[11,"binary","","Send binary frame",23,{"inputs":[{"name":"httpcontext"},{"name":"vec"}],"output":null}],[11,"ping","","Send ping frame",23,{"inputs":[{"name":"httpcontext"},{"name":"string"}],"output":null}],[11,"pong","","Send pong frame",23,{"inputs":[{"name":"httpcontext"},{"name":"string"}],"output":null}],[0,"dev","actix_web","The `actix-web` prelude for library developers",null,null],[3,"Method","actix_web::dev","The Request Method (VERB)",null,null],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"Cookie","","Representation of an HTTP cookie.",null,null],[3,"CookieBuilder","","Structure that follows the builder pattern for building `Cookie` structs.",null,null],[4,"CookieParseError","","Enum corresponding to a parsing error.",null,null],[13,"MissingPair","","The cookie did not contain a name/value pair.",0,null],[13,"EmptyName","","The cookie's name was empty.",0,null],[13,"Utf8Error","","Decoding the cookie's name or value resulted in invalid UTF-8.",0,null],[3,"HttpRange","","HTTP Range header representation.",null,null],[12,"start","","",1,null],[12,"length","","",1,null],[4,"HttpRangeParseError","","Range parsing error",null,null],[13,"InvalidRange","","Returned if range is invalid.",2,null],[13,"NoOverlap","","Returned if first-byte-pos of all of the byte-range-spec values is greater than the content size. See https://github.com/golang/go/commit/aa9b3d7",2,null],[3,"Application","","Application",null,null],[3,"ApplicationBuilder","","Application builder",null,null],[3,"HttpRequest","","An HTTP Request",null,null],[3,"HttpResponse","","An HTTP Response",null,null],[12,"version","","",3,null],[12,"headers","","",3,null],[12,"status","","",3,null],[3,"HttpResponseBuilder","","An HTTP response builder",null,null],[3,"Payload","","Stream of byte chunks",null,null],[3,"Reply","","Represents response process.",null,null],[3,"Resource","","Http resource",null,null],[3,"RouteFactory","","This is used for routes registration within `Resource`",null,null],[3,"Params","","Route match information",null,null],[3,"Logger","","`Middleware` for logging request and response info to the terminal.",null,null],[3,"HttpServer","","An HTTP Server",null,null],[3,"HttpContext","","Actor execution context",null,null],[3,"StaticFiles","","Static files handling",null,null],[3,"Task","","",null,null],[4,"ParseError","","A set of errors that can occur during parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",4,null],[13,"Uri","","An invalid `Uri`, such as `exam ple.domain`.",4,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",4,null],[13,"Header","","An invalid `Header`.",4,null],[13,"TooLarge","","A message head is too large to be reasonable.",4,null],[13,"Incomplete","","A message reached EOF, but is not complete.",4,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",4,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",4,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",4,null],[13,"Utf8","","Parsing a field as string failed",4,null],[4,"Body","","Represents various types of http message body.",null,null],[13,"Empty","","Empty response. `Content-Length` header is set to `0`",5,null],[13,"Binary","","Specific response body. `Content-Length` header is set to length of bytes.",5,null],[13,"Length","","Streaming response body with specified length.",5,null],[13,"Streaming","","Unspecified streaming response. Developer is responsible for setting right `Content-Length` or `Transfer-Encoding` headers.",5,null],[13,"Upgrade","","Upgrade connection.",5,null],[4,"PayloadError","","A set of error that can occur during payload parsing.",null,null],[13,"Incomplete","","A payload reached EOF, but is not complete.",6,null],[13,"ParseError","","Parse error",6,null],[6,"PayloadItem","","Just Bytes object",null,null],[8,"Middleware","","Middleware definition",null,null],[11,"start","","Method is called when request is ready.",24,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"result"}}],[11,"response","","Method is called when handler returns response, but before sending body streams to peer.",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"name":"httpresponse"}}],[11,"finish","","Http interation is finished",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[8,"Route","","Actors with ability to handle http requests.",null,null],[16,"State","","Shared state. State is shared with all routes within same application and could be accessed with `HttpContext::state()` method.",25,null],[11,"expect","","Handle `EXPECT` header. By default respones with `HTTP/1.1 100 Continue`",25,null],[10,"request","","Handle incoming request. Route actor can return result immediately with `Reply::reply`. Actor itself can be returned with `Reply::stream` for handling streaming request/response or websocket connection. In that case `HttpContext::start` and `HttpContext::write` has to be used for writing response.",25,null],[11,"factory","","This method creates `RouteFactory` for this actor.",25,{"inputs":[],"output":{"name":"routefactory"}}],[8,"RouteHandler","","Trait defines object that could be regestered as resource route",null,null],[10,"handle","","Handle request",26,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"set_prefix","","Set route prefix",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[0,"httpcodes","actix_web","Basic http responses",null,null],[3,"StaticResponse","actix_web::httpcodes","",null,null],[17,"HTTPOk","","",null,null],[17,"HTTPCreated","","",null,null],[17,"HTTPNoContent","","",null,null],[17,"HTTPFound","","",null,null],[17,"HTTPBadRequest","","",null,null],[17,"HTTPNotFound","","",null,null],[17,"HTTPUnauthorized","","",null,null],[17,"HTTPPaymentRequired","","",null,null],[17,"HTTPForbidden","","",null,null],[17,"HTTPMethodNotAllowed","","",null,null],[17,"HTTPNotAcceptable","","",null,null],[17,"HTTPProxyAuthenticationRequired","","",null,null],[17,"HTTPRequestTimeout","","",null,null],[17,"HTTPConflict","","",null,null],[17,"HTTPGone","","",null,null],[17,"HTTPLengthRequired","","",null,null],[17,"HTTPPreconditionFailed","","",null,null],[17,"HTTPPayloadTooLarge","","",null,null],[17,"HTTPUriTooLong","","",null,null],[17,"HTTPExpectationFailed","","",null,null],[17,"HTTPInternalServerError","","",null,null],[11,"builder","","",27,{"inputs":[{"name":"self"}],"output":{"name":"httpresponsebuilder"}}],[11,"response","","",27,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"with_reason","","",27,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"httpresponse"}}],[11,"with_body","","",27,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"httpresponse"}}],[11,"handle","","",27,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"from","actix_web","",3,{"inputs":[{"name":"staticresponse"}],"output":{"name":"self"}}],[0,"multipart","","Multipart requests support.",null,null],[3,"Multipart","actix_web::multipart","The server-side implementation of `multipart/form-data` requests.",null,null],[3,"Field","","A single field in a multipart stream",null,null],[3,"FieldChunk","","A field's chunk",null,null],[12,"0","","",28,null],[4,"MultipartError","","A set of errors that can occur during parsing multipart streams.",null,null],[13,"NoContentType","","Content-Type header is not found",29,null],[13,"ParseContentType","","Can not parse Content-Type header",29,null],[13,"Boundary","","Multipart boundary is not found",29,null],[13,"Parse","","Error during field parsing",29,null],[13,"Payload","","Payload error",29,null],[4,"MultipartItem","","",null,null],[13,"Field","","Multipart field",30,null],[13,"Nested","","Nested multipart stream",30,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",29,{"inputs":[{"name":"parseerror"}],"output":{"name":"multiparterror"}}],[11,"from","","",29,{"inputs":[{"name":"payloaderror"}],"output":{"name":"multiparterror"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create multipart instance for boundary.",31,{"inputs":[{"name":"string"},{"name":"payload"}],"output":{"name":"multipart"}}],[11,"boundary","","Extract boundary info from headers.",31,{"inputs":[{"name":"headermap"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"fieldchunk"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"fieldchunk"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"headers","","",32,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"content_type","","",32,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"PayloadItem","actix_web","Just Bytes object",null,null],[6,"RouteResult","","Request handling result.",null,null],[8,"Middleware","","Middleware definition",null,null],[11,"start","actix_web::dev","Method is called when request is ready.",24,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"result"}}],[11,"response","","Method is called when handler returns response, but before sending body streams to peer.",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"name":"httpresponse"}}],[11,"finish","","Http interation is finished",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[8,"Route","actix_web","Actors with ability to handle http requests.",null,null],[16,"State","","Shared state. State is shared with all routes within same application and could be accessed with `HttpContext::state()` method.",25,null],[11,"expect","actix_web::dev","Handle `EXPECT` header. By default respones with `HTTP/1.1 100 Continue`",25,null],[10,"request","actix_web","Handle incoming request. Route actor can return result immediately with `Reply::reply`. Actor itself can be returned with `Reply::stream` for handling streaming request/response or websocket connection. In that case `HttpContext::start` and `HttpContext::write` has to be used for writing response.",25,null],[11,"factory","actix_web::dev","This method creates `RouteFactory` for this actor.",25,{"inputs":[],"output":{"name":"routefactory"}}],[8,"RouteHandler","actix_web","Trait defines object that could be regestered as resource route",null,null],[10,"handle","","Handle request",26,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"payload"},{"name":"rc"}],"output":{"name":"task"}}],[11,"set_prefix","actix_web::dev","Set route prefix",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[18,"GET","","",33,null],[18,"POST","","",33,null],[18,"PUT","","",33,null],[18,"DELETE","","",33,null],[18,"HEAD","","",33,null],[18,"OPTIONS","","",33,null],[18,"CONNECT","","",33,null],[18,"PATCH","","",33,null],[18,"TRACE","","",33,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",33,null],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result if executed multiple times.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_str","","Return a &str representation of the HTTP method",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"utf8error"}],"output":{"name":"parseerror"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"cookiebuilder"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_str","","",34,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Formats the cookie `self` as a `Set-Cookie` header value.",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"hash","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"method"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"statuscode"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"from_str","","",36,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_from","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"try_from","","",33,null],[11,"try_from","","",36,null],[11,"try_from","","",36,{"inputs":[{"name":"statuscode"}],"output":{"name":"result"}}],[11,"try_from","","",36,{"inputs":[{"name":"u16"}],"output":{"name":"result"}}],[11,"try_from","","",36,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"try_from","","",33,{"inputs":[{"name":"method"}],"output":{"name":"result"}}],[11,"cmp","","",36,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"httprange"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u16","","Converts a u16 to a status code.",36,{"inputs":[{"name":"u16"}],"output":{"name":"result"}}],[11,"from_bytes","","Converts a &[u8] to a status code",36,null],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",36,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"is_informational","","Check if status is within 100-199.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Check if status is within 200-299.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if status is within 300-399.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if status is within 400-499.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if status is within 500-599.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[18,"CONTINUE","","",36,null],[18,"SWITCHING_PROTOCOLS","","",36,null],[18,"PROCESSING","","",36,null],[18,"OK","","",36,null],[18,"CREATED","","",36,null],[18,"ACCEPTED","","",36,null],[18,"NON_AUTHORITATIVE_INFORMATION","","",36,null],[18,"NO_CONTENT","","",36,null],[18,"RESET_CONTENT","","",36,null],[18,"PARTIAL_CONTENT","","",36,null],[18,"MULTI_STATUS","","",36,null],[18,"ALREADY_REPORTED","","",36,null],[18,"IM_USED","","",36,null],[18,"MULTIPLE_CHOICES","","",36,null],[18,"MOVED_PERMANENTLY","","",36,null],[18,"FOUND","","",36,null],[18,"SEE_OTHER","","",36,null],[18,"NOT_MODIFIED","","",36,null],[18,"USE_PROXY","","",36,null],[18,"TEMPORARY_REDIRECT","","",36,null],[18,"PERMANENT_REDIRECT","","",36,null],[18,"BAD_REQUEST","","",36,null],[18,"UNAUTHORIZED","","",36,null],[18,"PAYMENT_REQUIRED","","",36,null],[18,"FORBIDDEN","","",36,null],[18,"NOT_FOUND","","",36,null],[18,"METHOD_NOT_ALLOWED","","",36,null],[18,"NOT_ACCEPTABLE","","",36,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","",36,null],[18,"REQUEST_TIMEOUT","","",36,null],[18,"CONFLICT","","",36,null],[18,"GONE","","",36,null],[18,"LENGTH_REQUIRED","","",36,null],[18,"PRECONDITION_FAILED","","",36,null],[18,"PAYLOAD_TOO_LARGE","","",36,null],[18,"URI_TOO_LONG","","",36,null],[18,"UNSUPPORTED_MEDIA_TYPE","","",36,null],[18,"RANGE_NOT_SATISFIABLE","","",36,null],[18,"EXPECTATION_FAILED","","",36,null],[18,"IM_A_TEAPOT","","",36,null],[18,"MISDIRECTED_REQUEST","","",36,null],[18,"UNPROCESSABLE_ENTITY","","",36,null],[18,"LOCKED","","",36,null],[18,"FAILED_DEPENDENCY","","",36,null],[18,"UPGRADE_REQUIRED","","",36,null],[18,"PRECONDITION_REQUIRED","","",36,null],[18,"TOO_MANY_REQUESTS","","",36,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","",36,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","",36,null],[18,"INTERNAL_SERVER_ERROR","","",36,null],[18,"NOT_IMPLEMENTED","","",36,null],[18,"BAD_GATEWAY","","",36,null],[18,"SERVICE_UNAVAILABLE","","",36,null],[18,"GATEWAY_TIMEOUT","","",36,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","",36,null],[18,"VARIANT_ALSO_NEGOTIATES","","",36,null],[18,"INSUFFICIENT_STORAGE","","",36,null],[18,"LOOP_DETECTED","","",36,null],[18,"NOT_EXTENDED","","",36,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","",36,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",36,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_str","","Returns a &str representation of the `StatusCode`",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Creates a new `Cookie` with the given name and value.",34,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookie"}}],[11,"named","","Creates a new `Cookie` with the given name and an empty value.",34,{"inputs":[{"name":"n"}],"output":{"name":"cookie"}}],[11,"build","","Creates a new `CookieBuilder` instance from the given key and value strings.",34,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookiebuilder"}}],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value string. Does not perform any percent-decoding.",34,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value string where the name and value fields are percent-encoded. Percent-decodes the name/value fields.",34,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper around `Cookie` whose `Display` implementation percent-encodes the name and value of the wrapped `Cookie`.",34,{"inputs":[{"name":"self"}],"output":{"name":"encodedcookie"}}],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime. This method results in at most one allocation.",34,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"name","","Returns the name of `self`.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"value","","Returns the value of `self`.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name, value)`.",34,null],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"secure","","Returns whether this cookie was marked `Secure` or not.",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was specified.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"max_age","","Returns the specified max-age of the cookie if one was specified.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"path","","Returns the `Path` of the cookie if one was specified.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"expires","","Returns the `Expires` time of the cookie if one was specified.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_name","","Sets the name of `self` to `name`.",34,null],[11,"set_value","","Sets the value of `self` to `value`.",34,null],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",34,null],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",34,null],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",34,null],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",34,null],[11,"set_path","","Sets the `path` of `self` to `path`.",34,null],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",34,null],[11,"set_expires","","Sets the expires field of `self` to `time`.",34,null],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its expiration and max age 20 years into the future.",34,null],[11,"name_raw","","Returns the name of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, returns `None`.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"value_raw","","Returns the value of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, returns `None`.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, or if `self` doesn't contain a `Path`, or if the `Path` has changed since parsing, returns `None`.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, or if `self` doesn't contain a `Domain`, or if the `Domain` has changed since parsing, returns `None`.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new `CookieBuilder` instance from the given name and value.",35,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookiebuilder"}}],[11,"expires","","Sets the `expires` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"cookiebuilder"}}],[11,"max_age","","Sets the `max_age` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"cookiebuilder"}}],[11,"domain","","Sets the `domain` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"cookiebuilder"}}],[11,"path","","Sets the `path` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"cookiebuilder"}}],[11,"secure","","Sets the `secure` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"cookiebuilder"}}],[11,"http_only","","Sets the `http_only` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"cookiebuilder"}}],[11,"same_site","","Sets the `same_site` field in the cookie being built.",35,{"inputs":[{"name":"self"},{"name":"samesite"}],"output":{"name":"cookiebuilder"}}],[11,"permanent","","Makes the cookie being built 'permanent' by extending its expiration and max age 20 years into the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"cookiebuilder"}}],[11,"finish","","Finishes building and returns the built `Cookie`.",35,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"as_str","","Returns a description of this error as a string",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"parse","","Parses Range HTTP header string as per RFC 2616.",1,{"inputs":[{"name":"str"},{"name":"u64"}],"output":{"name":"result"}}],[11,"start","","Method is called when request is ready.",24,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"result"}}],[11,"response","","Method is called when handler returns response, but before sending body streams to peer.",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"name":"httpresponse"}}],[11,"finish","","Http interation is finished",24,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[11,"set_prefix","","Set route prefix",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"expect","","Handle `EXPECT` header. By default respones with `HTTP/1.1 100 Continue`",25,null],[11,"factory","","This method creates `RouteFactory` for this actor.",25,{"inputs":[],"output":{"name":"routefactory"}}],[11,"reply","","",37,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"poll","","",37,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}]],"paths":[[4,"CookieParseError"],[3,"HttpRange"],[4,"HttpRangeParseError"],[3,"HttpResponse"],[4,"ParseError"],[4,"Body"],[4,"PayloadError"],[3,"Application"],[3,"ApplicationBuilder"],[3,"HttpContext"],[3,"HttpRequest"],[3,"UrlEncoded"],[3,"HttpResponseBuilder"],[3,"Logger"],[3,"Payload"],[3,"Resource"],[3,"Reply"],[3,"Params"],[3,"RouteFactory"],[3,"StaticFiles"],[3,"HttpServer"],[4,"Message"],[3,"WsStream"],[3,"WsWriter"],[8,"Middleware"],[8,"Route"],[8,"RouteHandler"],[3,"StaticResponse"],[3,"FieldChunk"],[4,"MultipartError"],[4,"MultipartItem"],[3,"Multipart"],[3,"Field"],[3,"Method"],[3,"Cookie"],[3,"CookieBuilder"],[3,"StatusCode"],[3,"Task"]]};
initSearch(searchIndex);
